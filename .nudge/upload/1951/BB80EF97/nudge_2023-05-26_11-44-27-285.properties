#Application ID
app_id=89eea092-3893-4614-a412-9de464812a31
server_url=http://localhost:8081/

# We provide here only the most common parameters
# see https://www.nudge-apm.com/config-probe-java/ for a complete reference.

# log level, defaults to SEVERE, set to FINE to report any issue to support.
# log_level=FINE
profiling_enable=true

# uncomment to enable RUM 
activate_rum=true

# allows to define custom instrumentation points, refer to doc for details
# trace_classpath_regex=

# Allows to disable probe without changing JVM command line
enable=true

#Controls data collection and can also be dynamically changed at runtime through JMX.
collector_enable=true

# automatic fingerprint of application .jar files and covering of container components
component_scan=true

# Controls if system metrics sampling is enabled.
system_sample_enable=true

# Controls CORBA instrumentation.
log_corba=true

# Controls EJB3 instrumentation.
log_ejb3=true

# Controls RUM javascript injection in HTML pages generated by Application Server (JSP, Servlets, …) 
# Required to provide browser-level metrics on portal.
# Default value of this parameter is false
activate_rum=true

# Controls if sample-based profiling is active.
profiling_enable=true

# Profiling sampling interval, in milliseconds. Snapshot of running transactions are taken every second
# If your transactions are very fast or you have only few transactions per day, you should lower this value
profiling_sample_interval=1000 

# Maximum allowed time for Profiling sampling in milliseconds. Frequency is reduced when reaching this value to limit overhead.
profiling_sample_max_time=10

# Controls RMI instrumentation.
log_rmi=true

# Allow monitoring of custom transactions & layers that do not fit any JEE standard natively supported.
	# Each item is defined by 5 attributes:
		# Visibility : can be either public, protected, package, private or * (that would match all types of visibility)
		# package : the name of the java package(s). It can end with a wildcard * for a broad match.
		# method : the name of the method(s). It can contain with a wildcard * for a broad match.
		# name : the name of the corresponding transaction or layer. That name will appear in the gathered data and from the Nudge platform.
		# type : Optional value that can be either layer (by default) or tx. Indicates if it should define respectively a layer or a transaction.
# Here is some exemples :
	# * com.xyz.service.* * Service tx : All methods of the com.xyz.service package are instrumented as Service transactions.
	# public org.slf4j.impl.Log4jLoggerAdapter * Log4j layer : create a “Log4j” layer from slf4j to monitor logging as a layer.
# trace_classpath_regex=

# Enables HTTP parameters capture. When this parameter is enabled, it is mandatory to define either a list of allowed_params 
# or a list of ignored_params using by activating and completing on of the two next parameters. Both lists can not be combined.
# Default value of this parameter is false
capture_params=true

# Comma separated list. It specifies the parameters that the agent must ignore inside HTTP requests.
# Here is an exemple : ignored_params=password,card_number
# ignored_params=

# Comma separated list. It specifies the parameters that the agent can use inside HTTP requests.
# Here is an exemple : allowed_params=login,action
# allowed_params=

# Enables HTTP headers capture. When this parameter is enabled, it is mandatory to define either by a list of ignored_headers 
# or a list of allowed_headers by activating and completing of the two next parameters. Both lists can not be combined. 
# Both list can not be combined
capture_headers=true

# Specify the headers that the agent must ignore inside HTTP requests.
# Here is an exemple : ignored_headers=Authorization,Proxy-Authenticate
# ignored_headers=

# Specify the headers that the agent can use inside HTTP requests.
# Here is an exemple : allowed_headers=Cookie,Accept
# allowed_headers=

# allows to capture user IP adresses who making transactions.
# default value of this parameter is false
http_client_ip=true

# Creates a transaction for web application startup and shutdown. Allows to diagnose those deployment phases.
# Default value of this parameter is false
log_servlet_contextlistener=true

# List of packages or classes containing classes that must not be instrumented.
# Here is an example of a package exclusion and a class exclusion : excluded_classpath=oracle.oc4j.sql.proxy,com.acme.impl.SomeClass
# excluded_classpath=



# Java 17 compatibility
# To decomment for use with java 17 application
excluded_classpath=jdk.proxy2

# Tests conducted on our environments have shown that in some cases, excluding the jdk.proxy2 package alone is not enough.
# If you encounter problems launching the agent, modify the configuration as follows
# excluded_classpath=jdk.proxy2,jdk.proxy3



# List of packages containing classes that might be instrumented.
# included_classpath=

# List of classloaders loading classes that must not be instrumented
# excluded_classloaders=

# query_anonymization
query_anonymization=true

# When an SQL query is usually fast but some times takes too much time to execute, it is hard to reproduce the issue. This kind of problem 
# are usually caused by some specific values of the query’s parameters.
# When using a non-zero value for long_query_threshold, SQL queries that takes more time than this threshold (in milliseconds) will be sent 
# without anonymization in order to help reproduce and fix the issue.
long_query_threshold=0

# log level, defaults to SEVERE, set to FINE to report any issue to support.
log_level=FINE

# Directory used for logging. It will be created if it does not exists. The default directory is the log folder next to the probe jar file.
# When you have multiple JVMs on the same host, you should make sure that each JVM instance have its own dedicated folder.
# log_directory=

# Controls where data is stored when Nudge Portal is unreachable.
# Default value is default value of log_directory parameter
# disk_fallback_directory=

# Number of log files to keep. Log rotation is done at each JVM startup.
log_rotation_count=5

# Uploads probe log to nudge platform to report any errors and make support easier.
upload_log=true

# Raise log level to FINE for few minutes after startup. Makes support easier by providing valuable information to troubleshoot any startup issue.
fine_log_on_startup=true

# Enable JVM instance properties collection. When disabled, not all JVM parameters are available on Nudge portal.
allow_instance_config=true

# Uploads probe configuration to nudge platform to make support easier.
# Default value of this parameter is false
upload_config=true

# proxy_type=http

# Proxy server hostname or IP
# proxy_host=

# Proxy server port
# proxy_port=

# Proxy user, leave blank or omit parameter to bypass authentication.
# proxy_user=

# Proxy password
# proxy_password=

# Controls if probe sends data to portal using compression.
# With compression enabled (set at true), sent data is reduced by 90%, makes agent use sligtly more CPU.
compressed=false